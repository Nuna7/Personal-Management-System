# Generated by Django 4.2.13 on 2024-06-22 07:43

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="CalorieIntake",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("food_item", models.CharField(db_column="food_item", max_length=40)),
                ("calories", models.IntegerField(db_column="calories")),
                ("date", models.DateField(db_column="date")),
                (
                    "meal_type",
                    models.CharField(
                        choices=[
                            ("breakfast", "breakfast"),
                            ("dinner", "dinner"),
                            ("lunch", "lunch"),
                            ("snack", "snack"),
                        ],
                        db_column="meal_type",
                        max_length=10,
                    ),
                ),
            ],
            options={
                "db_table": "CALORIEINTAKE",
            },
        ),
        migrations.CreateModel(
            name="Expense",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.IntegerField(db_column="amount")),
                ("description", models.TextField(db_column="description")),
                ("category", models.CharField(db_column="category", max_length=30)),
                ("date", models.DateField(db_column="date")),
            ],
            options={
                "db_table": "EXPENSE",
            },
        ),
        migrations.CreateModel(
            name="Goal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(db_column="title", max_length=50)),
                ("description", models.TextField(db_column="description")),
                ("start_date", models.DateField(db_column="start_date")),
                ("end_date", models.DateField(db_column="end_date")),
                ("priority", models.CharField(db_column="priority", max_length=15)),
                ("status", models.CharField(db_column="status", max_length=15)),
            ],
            options={
                "db_table": "GOAL",
            },
        ),
        migrations.CreateModel(
            name="ProductivityMode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_time", models.TimeField(db_column="start_time")),
                ("end_time", models.TimeField(db_column="end_time")),
                (
                    "selected_day",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(),
                        db_column="selected_day",
                        default=list,
                        size=None,
                    ),
                ),
            ],
            options={
                "db_table": "PRODUCTIVITY_MODE",
            },
        ),
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(db_column="title", max_length=50)),
                ("description", models.TextField(db_column="description")),
                ("priority", models.CharField(db_column="priority", max_length=15)),
                ("status", models.CharField(db_column="status", max_length=15)),
            ],
            options={
                "db_table": "TASK",
            },
        ),
        migrations.CreateModel(
            name="WaterConsumption",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.IntegerField(db_column="amount")),
                ("date", models.DateField(db_column="date")),
            ],
            options={
                "db_table": "WATERCONSUMPTION",
            },
        ),
        migrations.CreateModel(
            name="WaterUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        db_column="user_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="water_users",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "waterconsumption_id",
                    models.ForeignKey(
                        db_column="waterconsumption_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="water_users",
                        to="internal_services.waterconsumption",
                    ),
                ),
            ],
            options={
                "db_table": "USER_WATER",
            },
        ),
        migrations.CreateModel(
            name="TaskUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "task_id",
                    models.ForeignKey(
                        db_column="task_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="internal_services.task",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        db_column="user_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "USER_TASK",
            },
        ),
        migrations.CreateModel(
            name="ProductivityModeUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "productivity_id",
                    models.ForeignKey(
                        db_column="productivity_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="internal_services.productivitymode",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        db_column="user_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "USER_PRODUCTIVITY",
            },
        ),
        migrations.CreateModel(
            name="GoalUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "goal_id",
                    models.ForeignKey(
                        db_column="goal_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="internal_services.goal",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        db_column="user_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "USER_GOAL",
            },
        ),
        migrations.CreateModel(
            name="ExpenseUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "expense_id",
                    models.ForeignKey(
                        db_column="expense_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="internal_services.expense",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        db_column="user_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "USER_EXPENSE",
            },
        ),
        migrations.CreateModel(
            name="CalorieUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "calorieintake_id",
                    models.ForeignKey(
                        db_column="calorieintake_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="internal_services.calorieintake",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        db_column="user_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "USER_CALORIE",
            },
        ),
    ]
